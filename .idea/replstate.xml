<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1512344694527">{:repl-history {:ide [], :local [&quot;(+ 1 1)&quot; &quot;(len \&quot;str\&quot;)&quot; &quot;(len [1 2 3 4])&quot; &quot;(require o.core :as wrap)&quot; &quot;(require omdb-wrapper.core :as wrapper)&quot; &quot;(use omdb-wrapper.core :as wrapper)&quot; &quot;(require 'omdb-wrapper.core)&quot; &quot;(foo)&quot; &quot;(omdb-wrapper.core/foo \&quot;Jeel!\&quot;)&quot; &quot;(require 'omdb-wrapper.core :as wrap)&quot; &quot;(require ['omdb-wrapper.core :as wrap])&quot; &quot;(wrap/foo \&quot;Jeel\&quot;)&quot; &quot;(require '[omdb-wrapper.core :as wrap])&quot; &quot;()&quot; &quot;(wrap/id \&quot;Hi\&quot; \&quot;C32rnfkd\&quot; \&quot;Awesome\&quot; \&quot;Dope\&quot;)&quot; &quot;(use 'omdb-wrapper.core :reload)&quot; &quot;(wrap/id \&quot;Hi\&quot; \&quot;C32rnfkd\&quot; {:type \&quot;great\&quot; :id 123})&quot; &quot;(inc 1)&quot; &quot;(require '[clj-http.client :as client])&quot; &quot;(client/get \&quot;http://www.omdbapi.com/\&quot; {:headers {\&quot;apikey\&quot; \&quot;cc60eebd\&quot; \&quot;t\&quot; \&quot;The Shawshank Redemption\&quot;}})&quot; &quot;(client/get \&quot;http://www.omdbapi.com/\&quot; {:form-params {:apikey \&quot;cc60eebd\&quot; :t \&quot;The Shawshank Redemption\&quot;}})&quot; &quot;(client/get )&quot; &quot;(client/get \&quot;http://www.omdbapi.com/\&quot; {:query-params {:apikey \&quot;cc60eebd\&quot; :t \&quot;The Shawshank Redemption\&quot;}})&quot; &quot;(:body (client/get \&quot;http://www.omdbapi.com/\&quot; {:query-params {:apikey \&quot;cc60eebd\&quot; :t \&quot;The Shawshank Redemption\&quot;}}))&quot; &quot;(def map {:query-params {:apikey \&quot;\&quot;}})&quot; &quot;(def m {:query-params {:apikey \&quot;\&quot;}})&quot; &quot;m&quot; &quot;(update-in [:query-params :apikey] m \&quot;Gabba go\&quot;)&quot; &quot;(-&gt; :query-params :api m)&quot; &quot;(-&gt; :api :query-params m)&quot; &quot;(get-in m [:query-params :apikey])&quot; &quot;(assoc-in m [:query-params :apikey] \&quot;apikey\&quot;)&quot; &quot;(flatten {:key \&quot;\&quot; {:of :keys}})&quot; &quot;(require '[clojure.data.json :as json])&quot;], :remote []}}</component>
</project>